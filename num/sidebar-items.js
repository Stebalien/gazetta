initSidebarItems({"fn":[["abs","Computes the absolute value.For `f32` and `f64`, `NaN` will be returned if the number is `NaN`For signed integers, `::MIN` will be returned if the number is `::MIN`."],["abs_sub","The positive difference of two numbers.Returns zero if `x` is less than or equal to `y`, otherwise the difference between `x` and `y` is returned."],["checked_pow","Raises a value to the power of exp, returning `None` if an overflow occurred.Otherwise same as the `pow` function.Example"],["one","Returns the multiplicative identity, `1`."],["pow","Raises a value to the power of exp, using exponentiation by squaring.Example"],["signum","Returns the sign of the number.For `f32` and `f64`:`1.0` if the number is positive, `+0.0` or `INFINITY` `-1.0` if the number is negative, `-0.0` or `NEG_INFINITY` `NaN` if the number is `NaN` For signed integers:`0` if the number is zero `1` if the number is positive `-1` if the number is negative"],["zero","Returns the additive identity, `0`."]],"mod":[["complex","Complex numbers."],["integer","Integer trait and functions."],["iter","External iterators for generic mathematics"],["traits","Numeric traits for generic mathematics"]]});
initSidebarItems({"struct":[["Difference","Difference iterator"],["Drain","HashSet drain iterator"],["HashSet","An implementation of a hash set using the underlying representation of a HashMap where the value is ().As with the `HashMap` type, a `HashSet` requires that the elements implement the `Eq` and `Hash` traits. This can frequently be achieved by using `#[derive(PartialEq, Eq, Hash)]`. If you implement these yourself, it is important that the following property holds:In other words, if two keys are equal, their hashes must be equal.It is a logic error for an item to be modified in such a way that the item's hash, as determined by the `Hash` trait, or its equality, as determined by the `Eq` trait, changes while it is in the set. This is normally only possible through `Cell`, `RefCell`, global state, I/O, or unsafe code.ExamplesThe easiest way to use `HashSet` with a custom type is to derive `Eq` and `Hash`. We must also derive `PartialEq`, this will in the future be implied by `Eq`."],["Intersection","Intersection iterator"],["IntoIter","HashSet move iterator"],["Iter","HashSet iterator"],["SymmetricDifference","Symmetric difference iterator."],["Union","Set union iterator."]]});